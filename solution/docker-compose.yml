services:
  angular-app:
    container_name: f1_angular
    build: ./angular
    dockerfile: Dockerfile
    ports:
      - "9999:4200"
    networks:
      - f1_network
  hub:
    container_name: f1_hub
    build:
      context: ./hub
      dockerfile: Dockerfile
    ports:
      - "9010:5000"
    volumes:
      - ./hub/src:/app/src
      - /app/bin
      - /app/obj
      - C:/FileStorage:/app/file_storage
    #environment:
    #  - ASPNETCORE_ENVIRONMENT=Development
    #  - ConnectionStrings__DefaultConnection=Host=f1_postgres;Database=f1_database;Username=f1_sgcan;Password=f1_sgcan123456
    depends_on:
      - postgres
    networks:
      - f1_network

  scraper:
    container_name: f1_scraper
    build:
      context: ./scraper
      dockerfile: Dockerfile
    ports:
      - "9020:8000"
    volumes:
      - ./scraper:/app
      - C:/FileStorage:/app/file_storage
    depends_on:
      - postgres
      - redis
    networks:
      - f1_network
  
  notifier:
    container_name: f1_notifier
    build: 
      context: ./notifier
      dockerfile: dockerfile
    environment:
      - SENDER_EMAIL=value
      - SENDER_PASSWORD = value
      #no pongo los personales
    networks:
      - f1_network

  postgres:
    image: postgres:14
    container_name: f1_postgres
    hostname: f1_postgres
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    env_file:
      - ./envs/.env.postgres
    networks:
      - f1_network
    ports:
      - "9040:5432"
    restart: "always"

  redis:
    image: redis:6.2-alpine
    container_name: f1_redis
    hostname: f1_redis
    ports:
      - "9050:6379"
    networks:
      - f1_network
    restart: "always"

networks:
  f1_network:
    name: f1_network
    driver: bridge